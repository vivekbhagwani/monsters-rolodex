{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-bar/search-bar.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","phone","username","website","className","src","alt","CardList","props","monsters","map","monster","SearchBar","placeholder","handleChange","class","type","onChange","App","state","search","fetch","then","res","json","users","setState","filteredMonsters","this","filter","mo","toLowerCase","includes","e","target","value","console","log","logo","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,MAA0B,iC,oCCkB1BA,EAfK,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,GAAIC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAsC,EAA/BC,MAA+B,EAAxBC,SAAwB,EAAdC,QACrD,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BP,EAA1B,aAAyCQ,IAAI,YACrD,6BAAKP,IAEL,4BAEKC,MAN4BF,ICU9BS,EAXS,SAAAC,GACpB,OACI,qBAAKJ,UAAU,YAAf,SACQI,EAAMC,SAASC,KAAI,SAAAC,GAAO,OAC1B,cAAC,EAAD,eAA2BA,GAAhBA,EAAQb,UCLtBc,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,qBAAKC,MAAM,aAAX,SACI,uBACIX,UAAU,eACVY,KAAK,SACLH,YAAaA,EACbI,SAAUH,QCuCXI,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXV,SAAU,GACVW,OAAQ,IALE,E,qDASd,WAAqB,IAAD,OAElBC,MADY,8CAEXC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEjB,SAAUgB,S,oBAG3C,WAAU,IAAD,OACDE,EAAmBC,KAAKT,MAAMV,SAASoB,QAAO,SAAAC,GAAE,OACpDA,EAAG/B,KAAKgC,cAAcC,SAAS,EAAKb,MAAMC,OAAOW,kBAEnD,OACE,qBAAK3B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,oBAAIA,UAAU,cAAd,8BACA,cAAC,EAAD,CACES,YAAY,kBACZC,aAAc,SAAAmB,GACZ,EAAKP,SAAS,CAAEN,OAAQa,EAAEC,OAAOC,QACjCC,QAAQC,IAAIJ,EAAEC,OAAOC,UAGzB,cAAC,EAAD,CACE1B,SAAUkB,IAGZ,qBAAKtB,IAAKiC,EAAMlC,UAAU,WAAWE,IAAI,kB,GApCjCiC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f95e1001.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport './card.styles.css'\n\nexport const Card = ({ id, name, email, phone, username, website }) => {\n    return (\n        <div className='card-container' key={id}>\n            <img src={`https://robohash.org/${id}?set=set2`} alt='monster' />\n            <h2>{name}</h2>\n            {/* <p>{username}</p> */}\n            <p>\n                {/* {phone} */}\n                {email}\n            </p>\n            {/* <a href={website} target='_blank'>{website}</a> */}\n        </div>\n    )\n}\n\nexport default Card","import React from 'react'\nimport './card-list.styles.css'\nimport Card from '../card/card.component'\n\nexport const CardList = props => {\n    return (\n        <div className='card-list'>\n            {   props.monsters.map(monster => \n                <Card key={monster.id} {...monster} />\n                ) \n            }\n        </div>\n    )\n}\n\nexport default CardList","import React from 'react'\nimport './search-bar.styles.css'\n\nexport const SearchBar = ({ placeholder, handleChange }) => {\n    return (\n        <div class='search-bar'>\n            <input\n                className='search-input'\n                type='search'\n                placeholder={placeholder} \n                onChange={handleChange}\n            />\n        </div>\n    )\n}","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport { SearchBar } from './components/search-bar/search-bar.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      search: ''\n    }\n  }\n\n  componentDidMount() {\n    const apiUrl = `https://jsonplaceholder.typicode.com/users`\n    fetch(apiUrl)\n    .then( res => res.json())\n    .then(users => this.setState({ monsters: users }))\n  }\n  \n  render() {\n    const filteredMonsters = this.state.monsters.filter(mo => \n      mo.name.toLowerCase().includes(this.state.search.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className='App-heading'>Monsters Rolodex</h1>\n          <SearchBar\n            placeholder='search monsters' \n            handleChange={e => {\n              this.setState({ search: e.target.value })\n              console.log(e.target.value)\n            }}\n          />\n          <CardList \n            monsters={filteredMonsters} \n          />\n\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}